[tox]
#envlist = py27, py34, py34_64
envlist = py27

[testenv]
install_command = python -m pip install {opts} {packages} -cconstraints.txt
# requirements-build.txt needed for building the wheel in each testenv
deps =
    pip-conflict-checker==0.3
    -rrequirements-test.txt
    -rrequirements-build.txt
pip_pre=True
passenv = NUMBER_OF_PROCESSORS  # needed for some multiprocessing features on windows (numpy, scipy etc)
          USERPROFILE  # tox > 2.0.0 will not pass home env
          HOME         # Linux home env
          CODECOV_TOKEN
          TOXENV CI TRAVIS TRAVIS_* # codecov

[testenv:py27]
# need to remove 'build' created by bdist_wheel before running the next tox env
commands =
    pipconflictchecker
    python -m pytest --cov . --cov-config=tox.ini --cov-report xml --junit-xml "junit-{envname}.xml"
    python setup.py bdist_wheel
    python -c "import shutil; shutil.rmtree('build')"
    codecov

# Specify additional deps if required
#deps =
#    {[testenv]deps}

# Avoid coverage twice
[testenv:py34]
commands =
    pipconflictchecker
    python -m pytest --junit-xml "junit-{envname}.xml"
    python setup.py bdist_wheel
    python -c "import shutil; shutil.rmtree('build')"
    codecov

# Avoid coverage twice
[testenv:py34_64]
# Windows only has 64 bit and 32 bit separately.
platform=win32
basepython=c:\Python34_64\python.exe
commands =
    pipconflictchecker
    python -m pytest --junit-xml "junit-{envname}.xml"
    python setup.py bdist_wheel
    codecov


# Inline pytest cfg start here
[pytest]
# exclude directories
norecursedirs=env .tox
# fail on XPASS
xfail_strict = true

# Inline coverage config
# Toxic fun fact: Make sure the PATH will not be filtered out by these blob expressions
# Aiming at Jenkins builds names. Yes.. it happened, a Build was named xx-tests and then the *tests/* blob filtered the whole path
# so coverage failed! yay!
[run]
omit=
    setup.py
    *__init__.py
    */tests/*
    .tox*
# Coverage report only for python 2.7
[xml]
output=coverage_py27.xml
